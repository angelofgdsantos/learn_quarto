[
  {
    "objectID": "walkthrough.html",
    "href": "walkthrough.html",
    "title": "Walk Through",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure¬†1.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 4 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\nFigure¬†1: A line plot on a polar axis"
  },
  {
    "objectID": "walkthrough.html#polar-axis",
    "href": "walkthrough.html#polar-axis",
    "title": "Walk Through",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure¬†1.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 4 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\nFigure¬†1: A line plot on a polar axis"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Quarto Document",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "authoring.html",
    "href": "authoring.html",
    "title": "Authoring",
    "section": "",
    "text": "Red\nGreen\nBlue"
  },
  {
    "objectID": "authoring.html#bibliography",
    "href": "authoring.html#bibliography",
    "title": "Authoring",
    "section": "4.1 Bibliography",
    "text": "4.1 Bibliography\nKnuth says always be literate [@canavire-bacarreza_unintended_2018].\n\n\nCode\n1 + 1\n\n\n2"
  },
  {
    "objectID": "authoring.html#references",
    "href": "authoring.html#references",
    "title": "Authoring",
    "section": "4.2 References",
    "text": "4.2 References"
  },
  {
    "objectID": "authoring.html#sec-plot",
    "href": "authoring.html#sec-plot",
    "title": "Authoring",
    "section": "5.1 Plot",
    "text": "5.1 Plot\n\n\nCode\nimport matplotlib.pyplot as plt\nplt.plot([1,23,2,4])\nplt.show()\n\n\n\n\n\n\n\n\nFigure¬†1: Simple Plot"
  },
  {
    "objectID": "authoring.html#sec-equation",
    "href": "authoring.html#sec-equation",
    "title": "Authoring",
    "section": "5.2 Equation",
    "text": "5.2 Equation\n\ns = \\sqrt{\\frac{1}{N-1} \\sum_{i=1}^N (x_i - \\overline{x})^2}\n\\tag{1}"
  },
  {
    "objectID": "authoring.html#placing-colorbars",
    "href": "authoring.html#placing-colorbars",
    "title": "Authoring",
    "section": "7.1 Placing Colorbars",
    "text": "7.1 Placing Colorbars\nColorbars indicate the quantitative extent of image data. Placing in a figure is non-trivial because room needs to be made for them. The simplest case is just attaching a colorbar to each axes:1.\n1¬†See the Matplotlib Gallery to explore colorbars further\n\nCode\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, axs = plt.subplots(2, 2)\nfig.set_size_inches(20, 8)\ncmaps = ['RdBu_r', 'viridis']\nfor col in range(2):\n    for row in range(2):\n        ax = axs[row, col]\n        pcm = ax.pcolormesh(\n          np.random.random((20, 20)) * (col + 1),\n          cmap=cmaps[col]\n        )\n        fig.colorbar(pcm, ax=ax)\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome üôãüèΩ‚Äç‚ôÇÔ∏è",
    "section": "",
    "text": "I create this website to learn quarto, maybe I can help you too!\nThese are the sections:\n\nAbout\nAuthoring\nComputational\nWalk Through\nDashboard jfj\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "computational.html",
    "href": "computational.html",
    "title": "Quarto Computations",
    "section": "",
    "text": "Code\nimport numpy as np\na = np.arange(15).reshape(3, 5)\na\n\n\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])"
  },
  {
    "objectID": "computational.html#numpy",
    "href": "computational.html#numpy",
    "title": "Quarto Computations",
    "section": "",
    "text": "Code\nimport numpy as np\na = np.arange(15).reshape(3, 5)\na\n\n\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])"
  },
  {
    "objectID": "computational.html#matplotlib",
    "href": "computational.html#matplotlib",
    "title": "Quarto Computations",
    "section": "Matplotlib",
    "text": "Matplotlib\n\n\nCode\nimport matplotlib.pyplot as plt\n\nfig = plt.figure()\nx = np.arange(10)\ny = 2.5 * np.sin(x / 20 * np.pi)\nyerr = np.linspace(0.05, 0.2, 10)\n\nplt.errorbar(x, y + 3, yerr=yerr, label='both limits (default)')\nplt.errorbar(x, y + 2, yerr=yerr, uplims=True, label='uplims=True')\nplt.errorbar(x, y + 1, yerr=yerr, uplims=True, lolims=True,\n             label='uplims=True, lolims=True')\n\nupperlimits = [True, False] * 5\nlowerlimits = [False, True] * 5\nplt.errorbar(x, y, yerr=yerr, uplims=upperlimits, lolims=lowerlimits,\n             label='subsets of uplims and lolims')\n\nplt.legend(loc='lower right')\nplt.show(fig)\n\n\n\n\n\n\n\n\nFigure¬†1: Errorbar limit selector"
  },
  {
    "objectID": "computational.html#plotly",
    "href": "computational.html#plotly",
    "title": "Quarto Computations",
    "section": "Plotly",
    "text": "Plotly\n\n\nCode\nimport plotly.express as px\nimport plotly.io as pio\ngapminder = px.data.gapminder()\ngapminder2007 = gapminder.query(\"year == 2007\")\nfig = px.scatter(gapminder2007, \n                 x=\"gdpPercap\", y=\"lifeExp\", color=\"continent\", \n                 size=\"pop\", size_max=60,\n                 hover_name=\"country\")\nfig.show()"
  },
  {
    "objectID": "computational.html#two-figures-together",
    "href": "computational.html#two-figures-together",
    "title": "Quarto Computations",
    "section": "Two figures together",
    "text": "Two figures together\n\nCode\nimport plotly.express as px\nimport plotly.io as pio\ngapminder = px.data.gapminder()\ndef gapminder_plot(year):\n    gapminderYear = gapminder.query(\"year == \" + \n                                    str(year))\n    fig = px.scatter(gapminderYear, \n                     x=\"gdpPercap\", y=\"lifeExp\",\n                     size=\"pop\", size_max=60,\n                     hover_name=\"country\")\n    fig.show()\n    \ngapminder_plot(1957)\ngapminder_plot(2007)\n\n\n\n\n\n\n\n\n\n                                                \n\n\n(a) Gapminder: 1957\n\n\n\n\n\n\n\n\n                                                \n\n\n(b) Gapminder: 2007\n\n\n\n\n\n\n\nFigure¬†2: Life Expectancy and GDP"
  }
]